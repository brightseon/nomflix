{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","state","componentDidMount","_callee","_ref2","_ref3","_ref4","regenerator_default","wrap","_context","prev","next","sent","data","results","_this","setState","t0","console","log","finish","stop","this","_this$state","Home_HomePresenter","Component","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","event","preventDefault","searchByTerm","target","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","TV_TVPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","idx","name","overview","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","_this$props","push","parsedId","match","history","parseInt","isNaN","abrupt","includes","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3f4f2cda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom : 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size : 14px;\r\n    font-weight : 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top : 25px;\r\n    display : grid;\r\n    grid-template-columns : repeat(auto-fill, 125px);\r\n    grid-gap : 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{ title }</Title>\r\n        <Grid>{ children }</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    children : PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height : 100vh;\r\n    width : 100vw;\r\n    display : flex;\r\n    justify-content : center;\r\n    font-size : 28px;\r\n    margin-top : 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏰\r\n        </span>\r\n    </Container>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width : 100vw;\r\n    display : flex;\r\n    justify-content : center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color : ${ props => props.color };\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={ color }>\r\n            { text }\r\n        </Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    font-size : 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image : url(${ props => props.bgUrl });\r\n    height : 180px;\r\n    background-size : cover;\r\n    border-radius : 4px;\r\n    background-position : center center;\r\n    transition : opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom : 5px;\r\n    right : 5px;\r\n    position : absolute;\r\n    opacity : 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom : 5px;\r\n    position : relative;\r\n    &:hover {\r\n        ${ Image } {\r\n            opacity : 0.3;\r\n        }\r\n        ${ Rating } {\r\n            opacity : 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display : block;\r\n    margin-bottom : 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size : 10px;\r\n    color : rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={ isMovie ? `/movie/${ id }` : `/show/${ id }` }>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={ imageUrl ? `https://image.tmdb.org/t/p/w300${ imageUrl }` : require('../assets/noPosterSmall.png') } />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"review rating\">\r\n                        ⭐️\r\n                    </span>{ \" \" }\r\n                    { rating } / 10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{ title.length > 18 ? `${ title.substring(0, 18) }...` : title }</Title>\r\n            <Year>{ year }</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    imageUrl : PropTypes.string,\r\n    title : PropTypes.string.isRequired,\r\n    rating : PropTypes.number,\r\n    year : PropTypes.string,\r\n    isMovie : PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding : 20px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : (\r\n                <Container>\r\n                    { \r\n                        nowPlaying && nowPlaying.length > 0 && (\r\n                            <Section title=\"Now Playing\">\r\n                                { \r\n                                    nowPlaying.map(movie => \r\n                                        <Poster key={ movie.id } id={ movie.id } title={ movie.original_title } imageUrl={ movie.poster_path }\r\n                                            isMovie={ true } rating={ movie.vote_average } year={ movie.release_date && movie.release_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    { \r\n                        upcoming && upcoming.length > 0 && (\r\n                            <Section title=\"Upcoming Movies\">\r\n                                { \r\n                                    upcoming.map(movie => \r\n                                        <Poster key={ movie.id } id={ movie.id } title={ movie.original_title } imageUrl={ movie.poster_path }\r\n                                            isMovie={ true } rating={ movie.vote_average } year={ movie.release_date && movie.release_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    { \r\n                        popular && popular.length > 0 && (\r\n                            <Section title=\"Popular Movies\">\r\n                                { \r\n                                    popular.map(movie => \r\n                                        <Poster key={ movie.id } id={ movie.id } title={ movie.original_title } imageUrl={ movie.poster_path }\r\n                                            isMovie={ true } rating={ movie.vote_average } year={ movie.release_date && movie.release_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    { error && <Message text={ error } color=\"#E74C3C\" /> }\r\n                </Container>\r\n            )\r\n        }\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying : PropTypes.array,\r\n    popular : PropTypes.array,\r\n    upcoming : PropTypes.array,\r\n    loading : PropTypes.bool.isRequired,\r\n    error : PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL : 'https://api.themoviedb.org/3/',\r\n    params : {\r\n        api_key : 'a8cbc927ffdebce702cccd708c2ded62',\r\n        language : 'en-US'\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying : () => api.get('movie/now_playing'),\r\n    upcoming : () => api.get('movie/upcoming'),\r\n    popular : () => api.get('movie/popular'),\r\n    movieDetail : id => api.get(`movie/${ id }`, {\r\n        params : {\r\n            append_to_response : 'videos'\r\n        }\r\n    }),\r\n    search : term => api.get('search/movie', {\r\n        params : {\r\n            // 어떤 파라미터 값을 넘기든 값을 인코딩하고, 그 문자열로 검색한다.\r\n            query : encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated : () => api.get('tv/top_rated'),\r\n    popular : () => api.get('tv/popular'),\r\n    airingToday : () => api.get('tv/airing_today'),\r\n    showDetail : id => api.get(`tv/${ id }`, {\r\n        params : {\r\n            append_to_response : 'videos'\r\n        }\r\n    }),\r\n    search : term => api.get('search/tv', {\r\n        params : {\r\n            // 어떤 파라미터 값을 넘기든 값을 인코딩하고, 그 문자열로 검색한다.\r\n            query : encodeURIComponent(term)\r\n        }\r\n    })\r\n};","import React, { Component } from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from 'api';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        nowPlaying : null,\r\n        upcoming : null,\r\n        popular : null,\r\n        error : null,\r\n        loading : true\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const { data : { results : nowPlaying } } = await moviesApi.nowPlaying();\r\n            const { data : { results : upcoming } } = await moviesApi.upcoming();\r\n            const { data : { results : popular } } = await moviesApi.popular();\r\n            \r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n        } catch(err) {\r\n            console.log('HomeContainer.js componentDidMount error : ', err);\r\n\r\n            this.setState({\r\n                error : 'Cant find movie information.'\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading : false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n        return (\r\n            <HomePresenter nowPlaying={ nowPlaying } upcoming={ upcoming } popular={ popular }\r\n                error={ error } loading={ loading } />\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding : 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom : 50px;\r\n    width : 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all : unset;\r\n    font-size : 28px;\r\n    width : 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, loading, searchTerm, error, handleSubmit, updateTerm }) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={ handleSubmit }>\r\n            <Input placeholder=\"Search Movies or TV Shows...\" value={ searchTerm } onChange={ updateTerm } />\r\n        </Form>\r\n        {\r\n            loading ? <Loader /> : (\r\n                <>\r\n                    {\r\n                        movieResults && movieResults.length > 0 && (\r\n                            <Section title=\"Movie Results\">\r\n                                { \r\n                                    movieResults.map(movie => \r\n                                        <Poster key={ movie.id } id={ movie.id } title={ movie.original_title } imageUrl={ movie.poster_path }\r\n                                            isMovie={ true } rating={ movie.vote_average } year={ movie.release_date && movie.release_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    {\r\n                        tvResults && tvResults.length > 0 && (\r\n                            <Section title=\"TV Show Results\">\r\n                                { \r\n                                    tvResults.map(show => \r\n                                        <Poster key={ show.id } id={ show.id } title={ show.original_name } imageUrl={ show.poster_path }\r\n                                            rating={ show.vote_average } year={ show.first_air_date && show.first_air_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n        { error && <Message text={ error } color=\"#E74C3C\" /> }\r\n        { \r\n            tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\r\n                <Message text=\"Noting found\" color=\"#95A5A6\" />\r\n            )\r\n        }\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults : PropTypes.array,\r\n    tvResults : PropTypes.array,\r\n    loading : PropTypes.bool.isRequired,\r\n    error : PropTypes.string,\r\n    searchTerm : PropTypes.string,\r\n    handleSubmit : PropTypes.func.isRequired,\r\n    updateTerm : PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import React, { Component } from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        movieResults : null,\r\n        tvResults : null,\r\n        searchTerm : '',\r\n        // 사용자가 검색하기를 기다릴 것이니까 false\r\n        loading : false,\r\n        error : null\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const { searchTerm } = this.state;\r\n\r\n        if(searchTerm !== '') {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event => {\r\n        const { target : { value } } = event;\r\n\r\n        this.setState({\r\n            searchTerm : value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n\r\n        this.setState({ loading : true });\r\n        \r\n        try {\r\n            const { data : { results : movieResults } } = await moviesApi.search(searchTerm);\r\n            const { data : { results : tvResults } } = await tvApi.search(searchTerm);\r\n\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch(err) {\r\n            console.log('SearchContainer.js searchByTerm error : ', err);\r\n\r\n            this.setState({ error : 'Cant find results.' });\r\n        } finally {\r\n            this.setState({ loading : false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n\r\n        return (\r\n            <SearchPresenter movieResults={ movieResults } tvResults={ tvResults } searchTerm={ searchTerm } \r\n                loading={ loading } error={ error } handleSubmit={ this.handleSubmit } updateTerm={ this.updateTerm } />\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst Header = styled.header`\r\n    color : white;\r\n    position : fixed;\r\n    top : 0;\r\n    left : 0;\r\n    width : 100%;\r\n    height : 50px;\r\n    display : flex;\r\n    align-items : center;\r\n    background-color : rgba(20, 20, 20, 0.8);\r\n    z-index : 10;\r\n    box-shadow : 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display : flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width : 80px;\r\n    height : 50px;\r\n    text-align : center;\r\n    border-bottom : 3px solid ${ props => props.current ? '#3498DB' : 'transparent' };\r\n    transition : border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height : 50px;\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : center;\r\n`;\r\n\r\nexport default withRouter(({ location : { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={ pathname === '/' }>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={ pathname === '/tv' }>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={ pathname === '/search' }>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : (\r\n                <Container>\r\n                    {\r\n                        topRated && topRated.length > 0 && (\r\n                            <Section title=\"Top Rated Shows\">\r\n                                {\r\n                                    topRated.map(show => \r\n                                        <Poster key={ show.id } id={ show.id } title={ show.original_name } imageUrl={ show.poster_path }\r\n                                            rating={ show.vote_average } year={ show.first_air_date && show.first_air_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    {\r\n                        popular && popular.length > 0 && (\r\n                            <Section title=\"Popular Shows\">\r\n                                {\r\n                                    popular.map(show => \r\n                                        <Poster key={ show.id } id={ show.id } title={ show.original_name } imageUrl={ show.poster_path }\r\n                                            rating={ show.vote_average } year={ show.first_air_date && show.first_air_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    {\r\n                        airingToday && airingToday.length > 0 && (\r\n                            <Section title=\"Airing Today\">\r\n                                {\r\n                                    airingToday.map(show => \r\n                                        <Poster key={ show.id } id={ show.id } title={ show.original_name } imageUrl={ show.poster_path }\r\n                                            rating={ show.vote_average } year={ show.first_air_date && show.first_air_date.substring(0, 4) } />\r\n                                    )\r\n                                }\r\n                            </Section>\r\n                        )\r\n                    }\r\n                    { error && <Message text={ error } color=\"#E74C3C\" /> }\r\n                </Container>\r\n            )\r\n        }\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated : PropTypes.array,\r\n    popular : PropTypes.array,\r\n    airingToday : PropTypes.array,\r\n    loading : PropTypes.bool.isRequired,\r\n    error : PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import React, { Component } from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        topRated : null,\r\n        popular : null,\r\n        airingToday : null,\r\n        loading : true,\r\n        error : null\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const { data : { results : topRated } } = await tvApi.topRated();\r\n            const { data : { results : popular } } = await tvApi.popular();\r\n            const { data : { results : airingToday } } = await tvApi.airingToday();\r\n\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });\r\n        } catch(err) {\r\n            console.log('TVContainer.js componentDidMount error : ', err);\r\n\r\n            this.setState({ error : 'Cant find TV information.' });\r\n        } finally {\r\n            this.setState({ loading : false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state;\r\n\r\n        return <TVPresenter topRated={ topRated } popular={ popular } airingToday={ airingToday } loading={ loading } error={ error } />;\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\n\r\nconst Container = styled.div`\r\n    height : calc(100vh - 50px);\r\n    width : 100%;\r\n    position : relative;\r\n    padding : 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    width : 100%;\r\n    height : 100%;\r\n    background-image : url(${ props => props.bgImage });\r\n    background-position : center center;\r\n    background-size : cover;\r\n    filter : blur(3px);\r\n    opacity : 0.5;\r\n    z-index : 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display : flex;\r\n    width : 100%;\r\n    position : relative;\r\n    z-index : 1;\r\n    height : 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width : 30%;\r\n    background-image : url(${ props => props.bgImage });\r\n    background-position : center center;\r\n    background-size : cover;\r\n    height : 100%;\r\n    border-radius : 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width : 70%;\r\n    margin-left : 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 32px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin : 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin : 0 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size : 12px;\r\n    opacity : 0.7;\r\n    line-height : 1.5;\r\n    width : 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>\r\n                    { result.original_title ? result.original_title : result.original_name }{ ' ' }\r\n                    | Nomflix\r\n                </title>\r\n            </Helmet>\r\n            <Backdrop bgImage={ `https://image.tmdb.org/t/p/original${ result.backdrop_path  }` } />\r\n            <Content>\r\n                <Cover bgImage={ result.poster_path ? `https://image.tmdb.org/t/p/original${ result.poster_path  }` : require('../../assets/noPosterSmall.png') } />\r\n                <Data>\r\n                    <Title>{ result.original_title ? result.original_title : result.original_name }</Title>\r\n                    <ItemContainer>\r\n                        <Item>{ result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4) }</Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>{ result.runtime ? result.runtime : result.episode_run_time[0] } min</Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>\r\n                            {\r\n                                result.genres && result.genres.map((genre, idx) => \r\n                                    idx === result.genres.length - 1 ? genre.name : `${ genre.name } / `\r\n                                )\r\n                            }\r\n                        </Item>\r\n                    </ItemContainer>\r\n                    <Overview>{ result.overview }</Overview>\r\n                </Data>\r\n            </Content>\r\n        </Container>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result : PropTypes.object,\r\n    loading : PropTypes.bool.isRequired,\r\n    error : PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import React, { Component } from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { location : { pathname } } = props;\r\n        \r\n        this.state = {\r\n            result : null,\r\n            loading : true,\r\n            error : null,\r\n            isMovie : pathname.includes('/movie/')\r\n        };\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        const { match : { params : { id } }, history : { push } } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        \r\n        if(isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n\r\n        let result = null;\r\n        \r\n        try {\r\n            if(isMovie) {\r\n                // 이것은 const result = request.data가 붙은 것과 동일하다.\r\n                // 여기서 request는 await mmviesApi.movieDetail(parsedId)의 결과 값\r\n                ({ data : result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data : result } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch(err) {\r\n            console.log('DetailContainer.js componentDidMount error : ', err);\r\n\r\n            this.setState({ error : 'Cant find anything.' });\r\n        } finally {\r\n            this.setState({ loading : false, result });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { result, loading, error } = this.state;\r\n        console.log(this.state);\r\n\r\n        return <DetailPresenter result={ result } loading={ loading } error={ error } />;\r\n    };\r\n};","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from 'Routes/Home';\r\nimport Search from 'Routes/Search';\r\nimport Header from 'Components/Header';\r\nimport TV from 'Routes/TV';\r\nimport Detail from 'Routes/Detail';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ Home } />\r\n                <Route path=\"/tv\" exact component={ TV } />\r\n                <Route path=\"/search\" component={ Search } />\r\n                <Route path=\"/movie/:id\" component={ Detail } />\r\n                <Route path=\"/show/:id\" component={ Detail } />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${ reset };\r\n    a {\r\n        text-decoration : none;\r\n        color : inherit;\r\n    }\r\n    * {\r\n        box-sizing : border-box;\r\n    }\r\n    body {\r\n        font-family : -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size : 12px;\r\n        background-color : rgba(20, 20, 20, 1);\r\n        color : white;\r\n        padding-top : 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\r\nimport Router from './Router';\r\nimport GlobalStyles from './GlobalStyles';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router />\r\n                <GlobalStyles />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}